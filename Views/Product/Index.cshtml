@model IEnumerable<EmployeeClient.Models.Domain.Product>

@{
    ViewData["Title"] = "Product List";
}
<div class="card-header">
    <div class="row">
        <div class="col-md-2"><h4 style="font-family: monospace; font-weight: bold;">Product List</h4></div>
        <div class="col-md-8"></div>
        <div class="col-md-2">
            <div class="form-group pull-right"><a class="btn btn-dark btn-sm" style="font-family: monospace; font-weight: bold;" asp-controller="Product" asp-action="Create"><i class="fa fa-plus"></i> New Product</a></div>
        </div>
    </div>
    <h5></h5>
</div>
<div>
    <div class="table-responsive">
        <table class="table table-hover">
            <thead>
                <tr>
                    <th>Ref</th>
                    <th>Product Name</th>
                    <th>Product Code</th>
                    <th>Quantity</th>
                    <th>Buying Price</th>
                    <th>Selling Price</th>
                    <th>Supplier</th>
                    <th>Category</th>
                    <th>Measure</th>
                    <th>Description</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var product in Model)
                {
                    <tr>
                        <td>@product.ProductId</td>
                        <td>@product.ProductName</td>
                        <td>@product.ProductCode</td>
                        <td>@product.ProductQty</td>
                        <td>@product.ProductBuyingPrice</td>
                        <td>@product.ProductSellingPrice</td>
                        <td>@product.ProductSupplier</td>
                        <td>@product.Category.CategoryName</td>
                        <td>@product.MeasureUnit.MeasureUnitName</td>
                        <td>@product.ProductDescription</td>
                        <td>
                            <select class="form-select form-select-sm form-control" style="font-size: 12px; font-weight: bold; height: 30px;" onchange="ActionChange(event)">
                                <option value="">Choose Action</option>
                                <option value="@Url.Action("Edit","Product", new { id = @product.ProductId })">Edit Product</option>
                                <option value="@Url.Action("Delete","Product", new { id = @product.ProductId })" data-code="@product.ProductCode">Delete Product</option>
                                <option value="@Url.Action("Transfer","Product", new { id = @product.ProductId })">Product Transfer</option>
                                <option value="@Url.Action("Movement","Product", new { id = @product.ProductId })">Product Movements</option>
                            </select>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script type="text/javascript">
        function ActionChange(event) {
            var selectEvent = event.target;
            var value = selectEvent.value;
            if (value.startsWith("/Product/Delete/")) {
                var proCode = selectEvent.options[selectEvent.selectedIndex].getAttribute("data-code");
                var confirmMessage = window.confirm("Are you sure you want to delete this Product " + proCode + "?");
                if (confirmMessage) {
                    window.location.href = value;
                }
            }
            else if (value.startsWith("/Product/Edit/")) {
                window.location.href = value;
            }
        }
    </script>
}
